const postMenuOptions=[{text:"hide",requireAuth:!1,iconClass:"bi bi-eye-slash"},{text:"edit",requireAuth:!0,iconClass:"bi bi-pencil"},{text:"delete",requireAuth:!0,iconClass:"bi bi-trash3"}];export function getPostMarkup(n){return`\n    \x3c!-- Post Header --\x3e\n    ${getPostHeader(n,n.author)}\n  \n    \x3c!-- Post Body --\x3e\n    ${getPostBody(n)}\n  \n    \x3c!-- Post Img Container --\x3e\n    <div class="c-post__img c-post-img js-img-container">\n    ${getPostImgMarkup(n)}\n    </div>\n  \n    \x3c!-- Post Info. --\x3e\n    ${getPostInfo(n)}\n  \n    \x3c!-- Post Button For Making A Comment --\x3e\n    <button class="c-post__new-comment-btn js-new-comment c-button" data-btn-type="input-like"\n      type="button">\n      Write a comment\n    </button>\n    `}function getPostHeader(n,t){return`\n    \x3c!-- Post Header --\x3e\n    <header class="c-post__header">\n    \n      \x3c!-- Post Title --\x3e\n      <h3 class="u-sr-only">This is a post by ${t.name}</h3>\n\n      \x3c!-- Post Author Image --\x3e\n      ${(new XMLSerializer).serializeToString(getUserImg(t,`${t.name}'s profile image`,""))}\n      \x3c!-- Post Details --\x3e\n      ${getPostDetails(n,t)}\n      \x3c!-- Post Dropdown Menu --\x3e\n      ${getPostMenu(n,t)}\n    </header>\n    `}export function getUserImg(n,t,e){const s=n.profile_image,o=document.createElement("div");return o.className="c-user-img",o.innerHTML="string"==typeof s?`\n    <img src="${s}" alt="${t}" data-img-id="${e}">\n    `:`\n    <img src="./assets/images/user-image-alt.webp" alt="${t}" data-img-id="${e}">\n    `,o}function getPostDetails(n,t){return`\n    <div class="c-post__details">\n      <address class="c-post__author-name">\n        <a href="./profile.html?userID=${t.id}">\n          ${t.name}\n          <span class="u-sr-only">'s profile</span>\n        </a>\n      </address>\n      <p class="c-post__publish-date">\n        <span class="u-sr-only">The post was created </span>${n.created_at}\n      </p>\n    </div>\n    `}function getPostMenu(n,t){const e=n.id;let s=postMenuOptions;return t.username!==currentUserData.username&&(s=postMenuOptions.filter((n=>!n.requireAuth))),`\n    <div class="c-post__menu c-dropdown">\n      <button class="c-dropdown__toggler js-dropdown-toggler" type="button" aria-controls="post-dropdown-${e}" aria-expanded="false">\n        <i class="bi bi-three-dots" aria-hidden="true"></i>\n        <span class="u-sr-only">\n          post dropdown menu toggler\n        </span>\n      </button>\n      <ul class="c-dropdown__list" id="post-dropdown-${e}">\n        ${s.reduce(((n,t)=>n+`\n      <li>\n        <button class="c-post__menu-item c-dropdown__item js-${t.text}-post" type="button"\n          aria-haspopup="dialog">\n          <i class="${t.iconClass}" aria-hidden="true"></i>\n          <span>${t.text}</span><span class="u-sr-only"> post</span>\n        </button>\n      </li>\n      `),"")}\n      </ul>\n    </div>\n    `}function getPostBody(n){return`<p class="c-post__body" data-fill="body">${n.body}</p>`}export function getPostImgMarkup(n){const t=n.id;return`\n      \x3c!-- Post Img --\x3e\n      <img data-img-id="${t}" alt="${n.author.name}'s post image"/>\n\n      \x3c!-- Post Img Opener --\x3e\n      <div class="c-overlay" data-hidden="true">\n        <button class="c-overlay__btn js-lightbox-opener u-fs-900 u-text-neu-700" type="button"\n          data-target="${t}">\n          <i class="bi bi-eye" aria-hidden="true"></i>\n          <span class="u-sr-only">\n            Show the post image in a lightbox\n          </span>\n        </button>\n      </div>\n      `}function getPostInfo(n){return`\n    <div class="c-post__info">\n  \n      \x3c!-- Post Comments Count --\x3e\n      ${getPostComments(n.comments_count)}\n  \n      \x3c!-- Post Tags --\x3e\n      ${getPostTags(n.tags)}\n    </div>\n    `}function getPostComments(n){return`\n    <button class="c-post__comments-btn js-show-comments"\n      type="button"" data-fill="commentsCount">\n      ${formatCommentsCount(n)}\n    </button>\n    `}export function formatCommentsCount(n){const t='<span class="u-sr-only">This post has </span>';switch(n){case 0:return'no comments <span class="u-sr-only">for this post</span>';case 1:return`${t} 1 comment <span class="u-sr-only">, click to display it</span>`}return`${t} ${n} comments <span class="u-sr-only">, click to display them</span>`}function getPostTags(n){let t=n.reduce(((n,t)=>n+`<span class="c-post__tag">${t.name}</span>`),"");return""===t?"":`\n    <div class="c-post__tags l-flex-cluster" style="--clusterSpacer: var(--spacer-100)">\n      ${t}\n    </div>\n    `}export function getCommentMarkup(n){const t=dayjs(n.createdAt).fromNow(),e=n.author;return`\n  <li>\n    <article class="comment">\n    \x3c!-- Comment Header --\x3e\n    <header class="comment__header">\n\n      \x3c!-- Comment Title --\x3e\n      <h4 class="u-sr-only">A comment by ${e.name}</h4>\n\n      \x3c!-- Comment Author Image --\x3e\n        <div class="comment__author-img">\n            ${(new XMLSerializer).serializeToString(getUserImg(e,`${e.name}'s profile image`))}\n        </div>\n        <div>\n            \x3c!-- Comment Author Account --\x3e\n            <address>\n            <a href="./profile.html?userID=${e.id}" class="comment__author-name">\n                ${e.name}\n            </a>\n            </address>\n            \x3c!-- Comment Publish Date --\x3e\n            <p class="comment__publish-date">\n            <time class="u-sr-only" timedate="${n.created_at}">${t}</time>\n            <span aria-hidden="true">${t}</span>\n            </p>\n        </div>\n        </header>\n        \x3c!-- Comment Body --\x3e\n        <p class="comment__body">${n.body}</p>\n        </article>\n    </li>\n      `}